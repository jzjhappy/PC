# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-06-07 18:58
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female')], max_length=128)),
                ('dob', models.DateField()),
                ('contact_number', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=128)),
                ('home_phone', models.CharField(max_length=128)),
                ('cell_phone', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('background', models.CharField(choices=[('beginner', 'Beginner'), ('networking 1', 'Networking 1'), ('networking 2', 'Networking 2'), ('programmer 1', 'Programmer 1'), ('programmer 2', 'Programmer 2'), ('database 1', 'Database 1'), ('database 2', 'Database 2')], max_length=128)),
                ('location', models.CharField(choices=[('eatontown', 'Eatontown'), ('fairfield', 'Fairfield'), ('hackensack', 'Hackensack'), ('south_plainfield', 'South Plainfield'), ('shanghai', 'Shanghai'), ('nanning', 'Nanning'), ('piscataway', 'Piscataway')], default='south_plainfield', max_length=128)),
                ('workforce', models.CharField(choices=[('--', '--'), ('atlantic', 'Atlantic'), ('bergen', 'Bergen'), ('burlington', 'Burlington'), ('camden', 'Camden'), ('essex', 'Essex'), ('hudson', 'Hudson'), ('mercer', 'Mercer'), ('middlesex', 'Middlesex'), ('monmouth', 'Monmouth'), ('morris', 'Morris'), ('nyc', 'NYC'), ('ocean', 'Ocean'), ('passaic', 'Passaic'), ('pennsylvania', 'Pennsylvania'), ('salem', 'Salem'), ('somerset', 'Somerset'), ('sussex', 'Sussex'), ('union', 'Union'), ('warren', 'Warren')], default='--', max_length=128)),
                ('source', models.CharField(choices=[('individual', 'Individual'), ('sylvan prometric/vue', 'Sylvan Prometric/VUE'), ('employment & training', 'Employment & Training'), ('member of chamber', 'Member of Chamber'), ('student visa f1', 'Student Visa F1'), ('instructor', 'Instructor'), ('avtech staff', 'Avtech Staff'), ('mo student', 'Mo student'), ('computertrainingguide', 'ComputerTrainingGuide'), ('corporate account', 'Corporate Account'), ('web register', 'Web Register'), ('students from act!', 'Students from ACT!'), ('dol - wia', 'DOL - WIA'), ('dol - wdp', 'DOL - WDP'), ('computer user', 'Computer User'), ('job guide', 'Job Guide'), ('desi talk', 'Desi Talk'), ('little india', 'Little India'), ('china press', 'China Press'), ('do wei', 'Do Wei')], default='individual', max_length=128)),
                ('refer_by', models.CharField(choices=[('alphatrain', 'AlphaTrain'), ('china press', 'China Press'), ('chinese express', 'Chinese Express'), ('chinese weekly', 'Chinese Weekly'), ('chinese world journal', 'Chinese World Journal'), ('computer user', 'Computer User'), ('county office', 'County Office'), ('desi talk', 'Desi Talk'), ('duowei times', 'Duowei Times'), ('flier', 'Flier'), ('friend', 'Friend'), ('internet', 'Internet'), ('job guide', 'Job Guide'), ('no refer', 'No Refer'), ('star ledger', 'Star Ledger')], default='no refer', max_length=128)),
                ('last_status', models.CharField(choices=[('followup', 'FollowUp'), ('sale', 'Sale'), ('nosale', 'NoSale')], default='followup', max_length=128)),
                ('newsletter', models.BooleanField()),
                ('created_by', models.CharField(max_length=128)),
                ('date', models.DateField()),
                ('notes', models.TextField()),
            ],
        ),
    ]
